# Generated by Django 5.2.1 on 2025-07-03 07:25

import core.utils
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('alias', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Service Type',
                'verbose_name_plural': 'Service Types',
            },
        ),
        migrations.CreateModel(
            name='VehicleBodyStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Vehicle Body Style',
                'verbose_name_plural': 'Vehicle Body Styles',
            },
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Vehicle Make',
                'verbose_name_plural': 'Vehicle Makes',
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Vehicle Model',
                'verbose_name_plural': 'Vehicle Models',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(blank=True, max_length=30, null=True)),
                ('iconcolor', models.CharField(blank=True, max_length=30, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('license_plate', models.CharField(max_length=50, unique=True)),
                ('model', models.CharField(max_length=50)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=30, null=True)),
                ('insurance_number', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_expiry', models.DateField(blank=True, null=True)),
                ('registration_expiry', models.DateField(blank=True, null=True)),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'CNG')], default='diesel', max_length=50)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('cvt', 'CVT')], default='manual', max_length=20)),
                ('eco_friendly', models.BooleanField(default=False)),
                ('available_seats', models.PositiveIntegerField(default=1)),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Max load capacity in kilograms', max_digits=10)),
                ('rate_per_hour', models.DecimalField(decimal_places=2, help_text='Hourly reservation rate in local currency', max_digits=8)),
                ('rate_per_day', models.DecimalField(decimal_places=2, help_text='Daily reservation rate in local currency', max_digits=8)),
                ('rate_per_km', models.DecimalField(decimal_places=2, help_text='Rate per kilometer in local currency', max_digits=8)),
                ('on_board', models.BooleanField(default=False)),
                ('service_status', models.CharField(choices=[('available', 'Available'), ('in_service', 'In Service'), ('busy', 'Busy'), ('off_service', 'Off Service')], default='available', max_length=20)),
                ('is_doc_uploaded', models.BooleanField(default=False)),
                ('is_doc_verified', models.BooleanField(default=False)),
                ('is_images_uploaded', models.BooleanField(default=False)),
                ('is_images_verified', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('service_types', models.ManyToManyField(related_name='vehicle_service_types', to='mover.servicetype')),
                ('body_style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mover.vehiclebodystyle')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mover.vehiclemake')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mover.vehicletype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mover',
            fields=[
                ('mover_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_online', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=False)),
                ('is_vehicle_added', models.BooleanField(default=False)),
                ('is_rider', models.BooleanField(default=True)),
                ('is_parcel_delivery', models.BooleanField(default=False)),
                ('is_plant_hire', models.BooleanField(default=False)),
                ('service_area', models.JSONField(blank=True, default=dict, null=True)),
                ('current_location', models.JSONField(blank=True, default=dict, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('is_whatsapp_verified', models.BooleanField(default=False)),
                ('driving_licence_number', models.CharField(max_length=50)),
                ('driving_licence_copy', models.FileField(blank=True, null=True, upload_to='driver/licence')),
                ('is_driving_licence_uploaded', models.BooleanField(default=False)),
                ('driving_licence_verification_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=15)),
                ('driving_licence_expire_date', models.DateField(blank=True, null=True)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=2)),
                ('total_rides', models.PositiveIntegerField(default=0, editable=False)),
                ('total_deliveries', models.PositiveIntegerField(default=0, editable=False)),
                ('status', models.CharField(choices=[('new', 'New Account'), ('profile_complete', 'Profile Complete'), ('active', 'Active')], default='new', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mover.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.FileField(blank=True, null=True, upload_to=core.utils.document_upload_to)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('doc_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mover.documenttype')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_documents', to='mover.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_1', models.ImageField(upload_to=core.utils.VehicleImageUploadTo('image_1'))),
                ('image_2', models.ImageField(blank=True, upload_to=core.utils.VehicleImageUploadTo('image_2'))),
                ('image_3', models.ImageField(blank=True, upload_to=core.utils.VehicleImageUploadTo('image_3'))),
                ('image_4', models.ImageField(blank=True, upload_to=core.utils.VehicleImageUploadTo('image_4'))),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_images', to='mover.vehicle')),
            ],
        ),
    ]
